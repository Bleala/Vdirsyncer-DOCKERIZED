name: CI - Docker Build Check ‚úÖ
run-name: Vdirsyncer Container Docker Build Check ‚úÖ
on:
  push:
    branches:
      - main
  pull_request_target:
    branches: 
      - main
      - dev
  workflow_dispatch:
    inputs:
      source:
        description: 'Specify the branch/tag to build (default: main)'
        required: true
        default: 'main'
        type: string 

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  BUILDCACHE_NAME: ${{ vars.BUILDCACHE_NAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  REGISTRY_GITHUB: ${{ vars.REGISTRY_GITHUB }}
  USERNAME_GITHUB: ${{ vars.USERNAME_GITHUB }}

jobs:
  CI-Docker-Build-Check:
    name: CI - Docker Build Check ‚úÖ
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
    permissions:
      # for actions/checkout to fetch code
      contents: read
      # for github/codeql-action/upload-sarif to upload SARIF results
      security-events: write
      # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      actions: read
      # for docker/build-push-action to push the Docker image to GitHub Container Registry
      packages: write
    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Check Out Repository Code üõí
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # use custom branch/tag on workflow_dispatch event, otherwise use github.ref
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.source || github.ref }}

      # https://github.com/marketplace/actions/hadolint-action
      - name: Lint Dockerfile üê≥üìÑüîç
        id: dockerfile-linter
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: ./docker/Dockerfile
      
      # https://github.com/marketplace/actions/shell-linter
      - name: Lint Shell Scripts üìúüîç
        id: shell-linter
        uses: Azbagheri/shell-linter@30a9cf3f6cf25c08fc98f10d7dc4167f7b5c0c00 # v0.8.0
        with:
          exclude-paths: "LICENSE,docker/Dockerfile"

      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set Up QEMU üõ†Ô∏è
        id: setup-qemu
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set Up Docker Buildx üê≥üß±
        id: setup-buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      # https://github.com/marketplace/actions/docker-login
      - name: Login To GitHub Container Registry üîëüì¶
        id: docker-login-ghcr
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ env.USERNAME_GITHUB}}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build Docker Image For Validation And Scanning üèóÔ∏èüî¨
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ./docker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY_GITHUB }}/${{ env.USERNAME_GITHUB}}/${{ env.IMAGE_NAME}}:ci-docker-build
          cache-from: type=registry,ref=${{ env.REGISTRY_GITHUB }}/${{ env.USERNAME_GITHUB}}/${{ env.BUILDCACHE_NAME}}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_GITHUB }}/${{ env.USERNAME_GITHUB}}/${{ env.BUILDCACHE_NAME}}:buildcache,mode=max

      # # https://github.com/marketplace/actions/aqua-security-trivy
      - name: Scan Image For Vulnerabilities üõ°Ô∏èüîç
        id: trivy-scan
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        with:
          image-ref: ${{ env.REGISTRY_GITHUB }}/${{ env.USERNAME_GITHUB}}/${{ env.IMAGE_NAME}}:ci-docker-build
          format: sarif
          output: trivy-results.sarif
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln,secret'

      # https://github.com/github/codeql-action
      # https://github.com/github/codeql-action/blob/main/upload-sarif/action.yml
      - name: Upload Trivy Scan Results To GitHub Security Tab üõ°Ô∏è‚¨ÜÔ∏è
        id: upload-trivy-results
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        if: always()
        with:
          sarif_file: trivy-results.sarif

      # https://github.com/marketplace/actions/ghcr-io-cleanup-action
      - name: GHCR Clean Up 'ci-docker-build' Image Tag üßπüè∑Ô∏è
        id: ghcr-clean-up-ci-docker-build
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ env.USERNAME_GITHUB }}
          packages: ${{ env.IMAGE_NAME }}
          delete-tags: ci-docker-build
          delete-untagged: true

      # https://github.com/marketplace/actions/ghcr-io-cleanup-action
      - name: GHCR Clean Up 'buildcache' Image Tag üßπüè∑Ô∏è
        id: ghcr-clean-up-buildcache
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ env.USERNAME_GITHUB }}
          packages: ${{ env.BUILDCACHE_NAME }}
          exclude-tags: buildcache
          keep-n-untagged: 20
