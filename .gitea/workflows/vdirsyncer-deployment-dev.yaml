name: Vdirsyncer Deployment Development
run-name: Vdirsyncer Deployment For Development Usage ðŸš€
on:
  push:
    branches:
      - "dev"
    paths:
      - "docker/**"
      - ".gitea/**"
      - ".github/**"

jobs:
  Vdirsyncer-Deployment-Development:
    name: Vdirsyncer Deployment Development
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Check Out Repository Code
        uses: actions/checkout@v4.2.2

      # https://github.com/marketplace/actions/docker-hub-description
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY_NAME }}
          short-description: "Vdirsyncer - sync calendars and addressbooks between servers and the local filesystem. DOCKERIZED!"

      # https://docs.docker.com/engine/install/ubuntu/
      # https://docs.docker.com/engine/install/ubuntu/#install-using-the-convenience-script
      - name: Install Docker Engine
        run: | 
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh ./get-docker.sh

      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      # https://github.com/marketplace/actions/docker-login#github-container-registry
      - name: Login To Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/marketplace/actions/docker-login#github-container-registry
      - name: Login To GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ secrets.GHCR_URL }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      # https://github.com/marketplace/actions/docker-login#github-container-registry
      - name: Login To Quay.io Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ secrets.QUAY_URL }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      # https://github.com/marketplace/actions/docker-login#github-container-registry
      - name: Login To Gitea
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ secrets.LOCAL_URL }}
          username: ${{ secrets.LOCAL_USERNAME }}
          password: ${{ secrets.LOCAL_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build And Push
        uses: docker/build-push-action@v6.11.0
        with:
          context: ./docker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:dev
            ${{ secrets.GHCR_URL }}/${{ secrets.GHCR_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:dev
            ${{ secrets.QUAY_URL }}/${{ secrets.QUAY_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:dev
            ${{ secrets.LOCAL_URL }}/${{ secrets.LOCAL_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:dev

      # https://github.com/niniyas/ntfy-action
      - name: Ntfy Notification
        uses: niniyas/ntfy-action@v1.0.4
        if: always()  # Wird immer ausgefÃ¼hrt, egal ob success, failure oder cancelled
        env:
          STATUS: ${{ job.status }}
        with:
          url: '${{ secrets.NTFY_URL }}'
          topic: '${{ secrets.NTFY_TOPIC }}'
          tags: ${{ env.STATUS == 'success' && '+1,partying_face,tada,action,successfully,completed' || env.STATUS == 'failure' && '-1,no_entry,skull,action,failed' || env.STATUS == 'cancelled' && '-1,cry,triangular_flag_on_post,action,cancelled' }}
          title: "Gitea Actions ${{ env.STATUS == 'success' && 'erfolgreich' || env.STATUS == 'failure' && 'fehlgeschlagen' || env.STATUS == 'cancelled' && 'abgebrochen' }}: ${{ env.GITHUB_REPOSITORY }} | ${{ env.GITHUB_REF_NAME }}"
          priority: ${{ env.STATUS == 'success' && 3 || 5 }}
          details: "Gitea Actions Workflow ${{ env.STATUS == 'success' && 'ist erfolgreich abgeschlossen.' || env.STATUS == 'failure' && 'ist fehlgeschlagen!' || env.STATUS == 'cancelled' && 'wurde abgebrochen!' }}"
          # Bearer Header notwendig in JSON --> https://docs.ntfy.sh/publish/#access-tokens
          headers: '${{ secrets.NTFY_HEADERS }}'
          actions: '[{"action": "view", "label": "Gitea Ã¶ffnen", "url": "${{ secrets.GIT_URL }}/${{ env.GITHUB_REPOSITORY }}/actions", "clear": true}]'
          icon: 'https://w7.pngwing.com/pngs/940/571/png-transparent-gitea-hd-logo.png'
          image: true
